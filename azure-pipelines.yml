# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  tags:
    include:
    - v*
  branches:
    include:
    - main
    - feature/*
    - bugfix/*

resources:
  - repo: self

stages:
- stage: build
  dependsOn: []    # this removes the implicit dependency on previous stage and causes this to run in parallel
  jobs:
  - job:
    workspace:
      clean: all # what to clean up before the job runs
    pool: Custom
    timeoutInMinutes: 90
    steps:

    - task: Docker@2
      inputs:
        containerRegistry: $(ACR_CONTAINER_REGISTRY)
        repository: 'rosettafold'
        command: 'build'
        arguments: --build-arg ROSETTACOMMONS_CONDA_USERNAME=$(ROSETTACOMMONS_CONDA_USERNAME) --build-arg ROSETTACOMMONS_CONDA_PASSWORD=$(ROSETTACOMMONS_CONDA_PASSWORD)
        Dockerfile: 'Dockerfile'
        tags: |
          $(Build.SourceBranchName)-$(Build.BuildId)
          $(Build.SourceBranchName)-$(Build.SourceVersion)
          $(Build.SourceBranchName)-latest
          $(Build.SourceBranchName) 
    - task: Docker@2
      inputs:
        containerRegistry: $(ACR_CONTAINER_REGISTRY)
        repository: 'rosettafold'
        command: 'push'
        Dockerfile: 'Dockerfile'
        tags: |
          $(Build.SourceBranchName)-$(Build.BuildId)
          $(Build.SourceBranchName)-$(Build.SourceVersion)
          $(Build.SourceBranchName)-latest
          $(Build.SourceBranchName) 